volumes:
  auth_db_data:
  booking_db_data:
  redis_data:
  mongo_data:

services:
  api-gateway:
    image: nginx:stable-alpine
    container_name: api-gateway
    ports:
      - "80:80"
    volumes:
      - ./src/api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - booking-service
      - notification-service

  auth-db:
    image: postgres
    container_name: auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  auth-service:
    build: ./src/auth-service
    container_name: auth-service
    restart: unless-stopped #restart the container if it stops unless it is stopped manually
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@auth-db:5432/authdb
      - JWT_SECRET=your_jwt_secret_key_here
    depends_on:
      - auth-db
    command: npm run dev # used to override the default command in the Dockerfile
    volumes:
      #for development hot reload feature remove these lines in production
      - ./src/auth-service:/app # Bind source code
      - /app/node_modules # exclude the node_modules folder from the container for faster build and to prevent overwrite from host for os compatibility

  booking-db:
    image: postgres
    container_name: booking-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookingdb
    volumes:
      - booking_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  notification-service:
    build: ./src/notification-service
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGODB_URL=mongodb://mongo:27017/notifications
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:3001
    depends_on:
      - mongo
      - redis
    command: npm run dev
    volumes:
      - ./src/notification-service:/app
      - /app/node_modules

  booking-service:
    build: ./src/booking-service
    container_name: booking-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@booking-db:5432/bookingdb
      - JWT_SECRET=your_jwt_secret_key_here
      - AUTH_SERVICE_URL=http://auth-service:3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      - booking-db
      - auth-service
      - redis
    command: npm run dev
    volumes:
      - ./src/booking-service:/app
      - /app/node_modules
